<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".CalendarActivity">

<com.github.sundeepk.compactcalendarview.CompactCalendarView xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/compactcalendar_view"
    android:layout_width="fill_parent"
    android:layout_height="250dp"
    android:layout_marginBottom="8dp"
    android:layout_marginTop="8dp"
    android:paddingLeft="10dp"
    android:paddingRight="10dp"
    app:compactCalendarBackgroundColor="#98FB98"
    app:compactCalendarCurrentDayBackgroundColor="#B71C1C"
    app:compactCalendarMultiEventIndicatorColor="#fff"
    app:compactCalendarTargetHeight="250dp"
    app:compactCalendarTextColor="#fff"
    app:compactCalendarTextSize="12sp"
    app:layout_constraintBottom_toBottomOf="parent"
    app:layout_constraintEnd_toEndOf="parent"
    app:layout_constraintStart_toStartOf="parent"
    app:layout_constraintTop_toTopOf="parent" />
</android.support.constraint.ConstraintLayout>


//package com.treeki.treekii;
//
//import android.graphics.Color;
//import android.support.v7.app.ActionBar;
//import android.support.v7.app.AppCompatActivity;
//import android.os.Bundle;
//import android.util.Log;
//import android.widget.CalendarView;
//
//import com.github.sundeepk.compactcalendarview.CompactCalendarView;
//import com.github.sundeepk.compactcalendarview.domain.Event;
//
//import java.net.SocketImpl;
//import java.text.SimpleDateFormat;
//import java.util.Calendar;
//import java.util.Date;
//import java.util.List;
//import java.util.Locale;
//
//public class CalendarActivity extends AppCompatActivity {
//    private static final String TAG = "CalendarActivity";
//    CompactCalendarView ccv;
//    private SimpleDateFormat sdf = new SimpleDateFormat("dd- MMMM- YYYY", Locale.getDefault());
//    final ActionBar ab = getSupportActionBar();
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_calendar);
//        final CompactCalendarView compactCalendarView = (CompactCalendarView) findViewById(R.id.compactcalendar_view);
//        // Set first day of week to Monday, defaults to Monday so calling setFirstDayOfWeek is not necessary
//        // Use constants provided by Java Calendar class
//        compactCalendarView.setFirstDayOfWeek(Calendar.MONDAY);
//
//        // Add event 1 on Sun, 07 Jun 2015 18:20:51 GMT
//        Event ev1 = new Event(Color.GREEN, 1433701251000L, "Some extra data that I want to store.");
//        compactCalendarView.addEvent(ev1);
//
//        // Added event 2 GMT: Sun, 07 Jun 2015 19:10:51 GMT
//        Event ev2 = new Event(Color.GREEN, 1433704251000L);
//        compactCalendarView.addEvent(ev2);
//
//        // Query for events on Sun, 07 Jun 2015 GMT.
//        // Time is not relevant when querying for events, since events are returned by day.
//        // So you can pass in any arbitary DateTime and you will receive all events for that day.
//        List<Event> events = compactCalendarView.getEvents(1433701251000L); // can also take a Date object
//
//        // events has size 2 with the 2 events inserted previously
//        Log.d(TAG, "Events: " + events);
//
//        // define a listener to receive callbacks when certain events happen.
//        compactCalendarView.setListener(new CompactCalendarView.CompactCalendarViewListener() {
//            @Override
//            public void onDayClick(Date dateClicked) {
//                List<Event> events = compactCalendarView.getEvents(dateClicked);
//                Log.d(TAG, "Day was clicked: " + dateClicked + " with events " + events);
//            }
//
//            @Override
//            public void onMonthScroll(Date firstDayOfNewMonth) {
//                Log.d(TAG, "Month was scrolled to: " + firstDayOfNewMonth);
//            }
//        });
//    }
//}
